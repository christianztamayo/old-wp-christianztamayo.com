{"version":3,"sources":["../bower_components/html5shiv/dist/html5shiv.js","../bower_components/respond/dest/respond.src.js"],"names":["window","document","addStyleSheet","ownerDocument","cssText","p","createElement","parent","getElementsByTagName","documentElement","innerHTML","insertBefore","lastChild","firstChild","getElements","elements","html5","split","addElements","newElements","join","shivDocument","getExpandoData","data","expandoData","expando","expanID","nodeName","supportsUnknownElements","node","cache","cloneNode","saveClones","test","createElem","canHaveChildren","reSkip","tagUrn","frag","appendChild","createDocumentFragment","clone","i","elems","l","length","shivMethods","createFrag","Function","replace","shivCSS","supportsHtml5Styles","hasCSS","options","a","childNodes","e","version","type","module","exports","this","w","matchMedia","doc","undefined","bool","docElem","refNode","firstElementChild","fakeBody","div","id","style","background","q","offsetWidth","removeChild","matches","media","callMedia","applyMedia","respond","update","requestQueue","xmlHttp","xmlhttpmethod","XMLHttpRequest","ActiveXObject","ajax","url","callback","req","open","onreadystatechange","readyState","status","responseText","send","queue","regex","keyframes","urls","findStyles","only","minw","maxw","mediaQueriesSupported","lastCall","resizeDefer","eminpx","mediastyles","rules","appendedEls","parsedSheets","head","base","links","getEmValue","ret","body","originalHTMLFontSize","fontSize","originalBodyFontSize","fakeUsed","parseFloat","fromResize","docElemProp","currWidth","compatMode","styleBlocks","lastLink","now","Date","getTime","clearTimeout","setTimeout","hasOwnProperty","thisstyle","min","max","minnull","maxnull","indexOf","hasquery","push","j","parentNode","k","ss","css","nextSibling","styleSheet","createTextNode","translate","styles","href","qs","match","ql","substring","lastIndexOf","repUrls","useMedia","fullq","thisq","eachq","eql","RegExp","$1","$2","makeRequests","thisRequest","shift","ripCSS","sheet","isCSS","rel","toLowerCase","rawCssText","location","host","protocol","addEventListener","attachEvent"],"mappings":"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","file":"html5shiv-respond.js","sourcesContent":["/**\n* @preserve HTML5 Shiv 3.7.3 | @afarkas @jdalton @jon_neal @rem | MIT/GPL2 Licensed\n*/\n;(function(window, document) {\n/*jshint evil:true */\n  /** version */\n  var version = '3.7.3';\n\n  /** Preset options */\n  var options = window.html5 || {};\n\n  /** Used to skip problem elements */\n  var reSkip = /^<|^(?:button|map|select|textarea|object|iframe|option|optgroup)$/i;\n\n  /** Not all elements can be cloned in IE **/\n  var saveClones = /^(?:a|b|code|div|fieldset|h1|h2|h3|h4|h5|h6|i|label|li|ol|p|q|span|strong|style|table|tbody|td|th|tr|ul)$/i;\n\n  /** Detect whether the browser supports default html5 styles */\n  var supportsHtml5Styles;\n\n  /** Name of the expando, to work with multiple documents or to re-shiv one document */\n  var expando = '_html5shiv';\n\n  /** The id for the the documents expando */\n  var expanID = 0;\n\n  /** Cached data for each document */\n  var expandoData = {};\n\n  /** Detect whether the browser supports unknown elements */\n  var supportsUnknownElements;\n\n  (function() {\n    try {\n        var a = document.createElement('a');\n        a.innerHTML = '<xyz></xyz>';\n        //if the hidden property is implemented we can assume, that the browser supports basic HTML5 Styles\n        supportsHtml5Styles = ('hidden' in a);\n\n        supportsUnknownElements = a.childNodes.length == 1 || (function() {\n          // assign a false positive if unable to shiv\n          (document.createElement)('a');\n          var frag = document.createDocumentFragment();\n          return (\n            typeof frag.cloneNode == 'undefined' ||\n            typeof frag.createDocumentFragment == 'undefined' ||\n            typeof frag.createElement == 'undefined'\n          );\n        }());\n    } catch(e) {\n      // assign a false positive if detection fails => unable to shiv\n      supportsHtml5Styles = true;\n      supportsUnknownElements = true;\n    }\n\n  }());\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Creates a style sheet with the given CSS text and adds it to the document.\n   * @private\n   * @param {Document} ownerDocument The document.\n   * @param {String} cssText The CSS text.\n   * @returns {StyleSheet} The style element.\n   */\n  function addStyleSheet(ownerDocument, cssText) {\n    var p = ownerDocument.createElement('p'),\n        parent = ownerDocument.getElementsByTagName('head')[0] || ownerDocument.documentElement;\n\n    p.innerHTML = 'x<style>' + cssText + '</style>';\n    return parent.insertBefore(p.lastChild, parent.firstChild);\n  }\n\n  /**\n   * Returns the value of `html5.elements` as an array.\n   * @private\n   * @returns {Array} An array of shived element node names.\n   */\n  function getElements() {\n    var elements = html5.elements;\n    return typeof elements == 'string' ? elements.split(' ') : elements;\n  }\n\n  /**\n   * Extends the built-in list of html5 elements\n   * @memberOf html5\n   * @param {String|Array} newElements whitespace separated list or array of new element names to shiv\n   * @param {Document} ownerDocument The context document.\n   */\n  function addElements(newElements, ownerDocument) {\n    var elements = html5.elements;\n    if(typeof elements != 'string'){\n      elements = elements.join(' ');\n    }\n    if(typeof newElements != 'string'){\n      newElements = newElements.join(' ');\n    }\n    html5.elements = elements +' '+ newElements;\n    shivDocument(ownerDocument);\n  }\n\n   /**\n   * Returns the data associated to the given document\n   * @private\n   * @param {Document} ownerDocument The document.\n   * @returns {Object} An object of data.\n   */\n  function getExpandoData(ownerDocument) {\n    var data = expandoData[ownerDocument[expando]];\n    if (!data) {\n        data = {};\n        expanID++;\n        ownerDocument[expando] = expanID;\n        expandoData[expanID] = data;\n    }\n    return data;\n  }\n\n  /**\n   * returns a shived element for the given nodeName and document\n   * @memberOf html5\n   * @param {String} nodeName name of the element\n   * @param {Document|DocumentFragment} ownerDocument The context document.\n   * @returns {Object} The shived element.\n   */\n  function createElement(nodeName, ownerDocument, data){\n    if (!ownerDocument) {\n        ownerDocument = document;\n    }\n    if(supportsUnknownElements){\n        return ownerDocument.createElement(nodeName);\n    }\n    if (!data) {\n        data = getExpandoData(ownerDocument);\n    }\n    var node;\n\n    if (data.cache[nodeName]) {\n        node = data.cache[nodeName].cloneNode();\n    } else if (saveClones.test(nodeName)) {\n        node = (data.cache[nodeName] = data.createElem(nodeName)).cloneNode();\n    } else {\n        node = data.createElem(nodeName);\n    }\n\n    // Avoid adding some elements to fragments in IE < 9 because\n    // * Attributes like `name` or `type` cannot be set/changed once an element\n    //   is inserted into a document/fragment\n    // * Link elements with `src` attributes that are inaccessible, as with\n    //   a 403 response, will cause the tab/window to crash\n    // * Script elements appended to fragments will execute when their `src`\n    //   or `text` property is set\n    return node.canHaveChildren && !reSkip.test(nodeName) && !node.tagUrn ? data.frag.appendChild(node) : node;\n  }\n\n  /**\n   * returns a shived DocumentFragment for the given document\n   * @memberOf html5\n   * @param {Document} ownerDocument The context document.\n   * @returns {Object} The shived DocumentFragment.\n   */\n  function createDocumentFragment(ownerDocument, data){\n    if (!ownerDocument) {\n        ownerDocument = document;\n    }\n    if(supportsUnknownElements){\n        return ownerDocument.createDocumentFragment();\n    }\n    data = data || getExpandoData(ownerDocument);\n    var clone = data.frag.cloneNode(),\n        i = 0,\n        elems = getElements(),\n        l = elems.length;\n    for(;i<l;i++){\n        clone.createElement(elems[i]);\n    }\n    return clone;\n  }\n\n  /**\n   * Shivs the `createElement` and `createDocumentFragment` methods of the document.\n   * @private\n   * @param {Document|DocumentFragment} ownerDocument The document.\n   * @param {Object} data of the document.\n   */\n  function shivMethods(ownerDocument, data) {\n    if (!data.cache) {\n        data.cache = {};\n        data.createElem = ownerDocument.createElement;\n        data.createFrag = ownerDocument.createDocumentFragment;\n        data.frag = data.createFrag();\n    }\n\n\n    ownerDocument.createElement = function(nodeName) {\n      //abort shiv\n      if (!html5.shivMethods) {\n          return data.createElem(nodeName);\n      }\n      return createElement(nodeName, ownerDocument, data);\n    };\n\n    ownerDocument.createDocumentFragment = Function('h,f', 'return function(){' +\n      'var n=f.cloneNode(),c=n.createElement;' +\n      'h.shivMethods&&(' +\n        // unroll the `createElement` calls\n        getElements().join().replace(/[\\w\\-:]+/g, function(nodeName) {\n          data.createElem(nodeName);\n          data.frag.createElement(nodeName);\n          return 'c(\"' + nodeName + '\")';\n        }) +\n      ');return n}'\n    )(html5, data.frag);\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Shivs the given document.\n   * @memberOf html5\n   * @param {Document} ownerDocument The document to shiv.\n   * @returns {Document} The shived document.\n   */\n  function shivDocument(ownerDocument) {\n    if (!ownerDocument) {\n        ownerDocument = document;\n    }\n    var data = getExpandoData(ownerDocument);\n\n    if (html5.shivCSS && !supportsHtml5Styles && !data.hasCSS) {\n      data.hasCSS = !!addStyleSheet(ownerDocument,\n        // corrects block display not defined in IE6/7/8/9\n        'article,aside,dialog,figcaption,figure,footer,header,hgroup,main,nav,section{display:block}' +\n        // adds styling not present in IE6/7/8/9\n        'mark{background:#FF0;color:#000}' +\n        // hides non-rendered elements\n        'template{display:none}'\n      );\n    }\n    if (!supportsUnknownElements) {\n      shivMethods(ownerDocument, data);\n    }\n    return ownerDocument;\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * The `html5` object is exposed so that more elements can be shived and\n   * existing shiving can be detected on iframes.\n   * @type Object\n   * @example\n   *\n   * // options can be changed before the script is included\n   * html5 = { 'elements': 'mark section', 'shivCSS': false, 'shivMethods': false };\n   */\n  var html5 = {\n\n    /**\n     * An array or space separated string of node names of the elements to shiv.\n     * @memberOf html5\n     * @type Array|String\n     */\n    'elements': options.elements || 'abbr article aside audio bdi canvas data datalist details dialog figcaption figure footer header hgroup main mark meter nav output picture progress section summary template time video',\n\n    /**\n     * current version of html5shiv\n     */\n    'version': version,\n\n    /**\n     * A flag to indicate that the HTML5 style sheet should be inserted.\n     * @memberOf html5\n     * @type Boolean\n     */\n    'shivCSS': (options.shivCSS !== false),\n\n    /**\n     * Is equal to true if a browser supports creating unknown/HTML5 elements\n     * @memberOf html5\n     * @type boolean\n     */\n    'supportsUnknownElements': supportsUnknownElements,\n\n    /**\n     * A flag to indicate that the document's `createElement` and `createDocumentFragment`\n     * methods should be overwritten.\n     * @memberOf html5\n     * @type Boolean\n     */\n    'shivMethods': (options.shivMethods !== false),\n\n    /**\n     * A string to describe the type of `html5` object (\"default\" or \"default print\").\n     * @memberOf html5\n     * @type String\n     */\n    'type': 'default',\n\n    // shivs the document according to the specified `html5` object options\n    'shivDocument': shivDocument,\n\n    //creates a shived element\n    createElement: createElement,\n\n    //creates a shived documentFragment\n    createDocumentFragment: createDocumentFragment,\n\n    //extends list of elements\n    addElements: addElements\n  };\n\n  /*--------------------------------------------------------------------------*/\n\n  // expose html5\n  window.html5 = html5;\n\n  // shiv the document\n  shivDocument(document);\n\n  if(typeof module == 'object' && module.exports){\n    module.exports = html5;\n  }\n\n}(typeof window !== \"undefined\" ? window : this, document));\n","/*! matchMedia() polyfill - Test a CSS media type/query in JS. Authors & copyright (c) 2012: Scott Jehl, Paul Irish, Nicholas Zakas. Dual MIT/BSD license */\n/*! NOTE: If you're already including a window.matchMedia polyfill via Modernizr or otherwise, you don't need this part */\n(function(w) {\n  \"use strict\";\n  w.matchMedia = w.matchMedia || function(doc, undefined) {\n    var bool, docElem = doc.documentElement, refNode = docElem.firstElementChild || docElem.firstChild, fakeBody = doc.createElement(\"body\"), div = doc.createElement(\"div\");\n    div.id = \"mq-test-1\";\n    div.style.cssText = \"position:absolute;top:-100em\";\n    fakeBody.style.background = \"none\";\n    fakeBody.appendChild(div);\n    return function(q) {\n      div.innerHTML = '&shy;<style media=\"' + q + '\"> #mq-test-1 { width: 42px; }</style>';\n      docElem.insertBefore(fakeBody, refNode);\n      bool = div.offsetWidth === 42;\n      docElem.removeChild(fakeBody);\n      return {\n        matches: bool,\n        media: q\n      };\n    };\n  }(w.document);\n})(this);\n\n/*! Respond.js v1.4.0: min/max-width media query polyfill. (c) Scott Jehl. MIT Lic. j.mp/respondjs  */\n(function(w) {\n  \"use strict\";\n  var respond = {};\n  w.respond = respond;\n  respond.update = function() {};\n  var requestQueue = [], xmlHttp = function() {\n    var xmlhttpmethod = false;\n    try {\n      xmlhttpmethod = new w.XMLHttpRequest();\n    } catch (e) {\n      xmlhttpmethod = new w.ActiveXObject(\"Microsoft.XMLHTTP\");\n    }\n    return function() {\n      return xmlhttpmethod;\n    };\n  }(), ajax = function(url, callback) {\n    var req = xmlHttp();\n    if (!req) {\n      return;\n    }\n    req.open(\"GET\", url, true);\n    req.onreadystatechange = function() {\n      if (req.readyState !== 4 || req.status !== 200 && req.status !== 304) {\n        return;\n      }\n      callback(req.responseText);\n    };\n    if (req.readyState === 4) {\n      return;\n    }\n    req.send(null);\n  };\n  respond.ajax = ajax;\n  respond.queue = requestQueue;\n  respond.regex = {\n    media: /@media[^\\{]+\\{([^\\{\\}]*\\{[^\\}\\{]*\\})+/gi,\n    keyframes: /@(?:\\-(?:o|moz|webkit)\\-)?keyframes[^\\{]+\\{(?:[^\\{\\}]*\\{[^\\}\\{]*\\})+[^\\}]*\\}/gi,\n    urls: /(url\\()['\"]?([^\\/\\)'\"][^:\\)'\"]+)['\"]?(\\))/g,\n    findStyles: /@media *([^\\{]+)\\{([\\S\\s]+?)$/,\n    only: /(only\\s+)?([a-zA-Z]+)\\s?/,\n    minw: /\\([\\s]*min\\-width\\s*:[\\s]*([\\s]*[0-9\\.]+)(px|em)[\\s]*\\)/,\n    maxw: /\\([\\s]*max\\-width\\s*:[\\s]*([\\s]*[0-9\\.]+)(px|em)[\\s]*\\)/\n  };\n  respond.mediaQueriesSupported = w.matchMedia && w.matchMedia(\"only all\") !== null && w.matchMedia(\"only all\").matches;\n  if (respond.mediaQueriesSupported) {\n    return;\n  }\n  var doc = w.document, docElem = doc.documentElement, mediastyles = [], rules = [], appendedEls = [], parsedSheets = {}, resizeThrottle = 30, head = doc.getElementsByTagName(\"head\")[0] || docElem, base = doc.getElementsByTagName(\"base\")[0], links = head.getElementsByTagName(\"link\"), lastCall, resizeDefer, eminpx, getEmValue = function() {\n    var ret, div = doc.createElement(\"div\"), body = doc.body, originalHTMLFontSize = docElem.style.fontSize, originalBodyFontSize = body && body.style.fontSize, fakeUsed = false;\n    div.style.cssText = \"position:absolute;font-size:1em;width:1em\";\n    if (!body) {\n      body = fakeUsed = doc.createElement(\"body\");\n      body.style.background = \"none\";\n    }\n    docElem.style.fontSize = \"100%\";\n    body.style.fontSize = \"100%\";\n    body.appendChild(div);\n    if (fakeUsed) {\n      docElem.insertBefore(body, docElem.firstChild);\n    }\n    ret = div.offsetWidth;\n    if (fakeUsed) {\n      docElem.removeChild(body);\n    } else {\n      body.removeChild(div);\n    }\n    docElem.style.fontSize = originalHTMLFontSize;\n    if (originalBodyFontSize) {\n      body.style.fontSize = originalBodyFontSize;\n    }\n    ret = eminpx = parseFloat(ret);\n    return ret;\n  }, applyMedia = function(fromResize) {\n    var name = \"clientWidth\", docElemProp = docElem[name], currWidth = doc.compatMode === \"CSS1Compat\" && docElemProp || doc.body[name] || docElemProp, styleBlocks = {}, lastLink = links[links.length - 1], now = new Date().getTime();\n    if (fromResize && lastCall && now - lastCall < resizeThrottle) {\n      w.clearTimeout(resizeDefer);\n      resizeDefer = w.setTimeout(applyMedia, resizeThrottle);\n      return;\n    } else {\n      lastCall = now;\n    }\n    for (var i in mediastyles) {\n      if (mediastyles.hasOwnProperty(i)) {\n        var thisstyle = mediastyles[i], min = thisstyle.minw, max = thisstyle.maxw, minnull = min === null, maxnull = max === null, em = \"em\";\n        if (!!min) {\n          min = parseFloat(min) * (min.indexOf(em) > -1 ? eminpx || getEmValue() : 1);\n        }\n        if (!!max) {\n          max = parseFloat(max) * (max.indexOf(em) > -1 ? eminpx || getEmValue() : 1);\n        }\n        if (!thisstyle.hasquery || (!minnull || !maxnull) && (minnull || currWidth >= min) && (maxnull || currWidth <= max)) {\n          if (!styleBlocks[thisstyle.media]) {\n            styleBlocks[thisstyle.media] = [];\n          }\n          styleBlocks[thisstyle.media].push(rules[thisstyle.rules]);\n        }\n      }\n    }\n    for (var j in appendedEls) {\n      if (appendedEls.hasOwnProperty(j)) {\n        if (appendedEls[j] && appendedEls[j].parentNode === head) {\n          head.removeChild(appendedEls[j]);\n        }\n      }\n    }\n    appendedEls.length = 0;\n    for (var k in styleBlocks) {\n      if (styleBlocks.hasOwnProperty(k)) {\n        var ss = doc.createElement(\"style\"), css = styleBlocks[k].join(\"\\n\");\n        ss.type = \"text/css\";\n        ss.media = k;\n        head.insertBefore(ss, lastLink.nextSibling);\n        if (ss.styleSheet) {\n          ss.styleSheet.cssText = css;\n        } else {\n          ss.appendChild(doc.createTextNode(css));\n        }\n        appendedEls.push(ss);\n      }\n    }\n  }, translate = function(styles, href, media) {\n    var qs = styles.replace(respond.regex.keyframes, \"\").match(respond.regex.media), ql = qs && qs.length || 0;\n    href = href.substring(0, href.lastIndexOf(\"/\"));\n    var repUrls = function(css) {\n      return css.replace(respond.regex.urls, \"$1\" + href + \"$2$3\");\n    }, useMedia = !ql && media;\n    if (href.length) {\n      href += \"/\";\n    }\n    if (useMedia) {\n      ql = 1;\n    }\n    for (var i = 0; i < ql; i++) {\n      var fullq, thisq, eachq, eql;\n      if (useMedia) {\n        fullq = media;\n        rules.push(repUrls(styles));\n      } else {\n        fullq = qs[i].match(respond.regex.findStyles) && RegExp.$1;\n        rules.push(RegExp.$2 && repUrls(RegExp.$2));\n      }\n      eachq = fullq.split(\",\");\n      eql = eachq.length;\n      for (var j = 0; j < eql; j++) {\n        thisq = eachq[j];\n        mediastyles.push({\n          media: thisq.split(\"(\")[0].match(respond.regex.only) && RegExp.$2 || \"all\",\n          rules: rules.length - 1,\n          hasquery: thisq.indexOf(\"(\") > -1,\n          minw: thisq.match(respond.regex.minw) && parseFloat(RegExp.$1) + (RegExp.$2 || \"\"),\n          maxw: thisq.match(respond.regex.maxw) && parseFloat(RegExp.$1) + (RegExp.$2 || \"\")\n        });\n      }\n    }\n    applyMedia();\n  }, makeRequests = function() {\n    if (requestQueue.length) {\n      var thisRequest = requestQueue.shift();\n      ajax(thisRequest.href, function(styles) {\n        translate(styles, thisRequest.href, thisRequest.media);\n        parsedSheets[thisRequest.href] = true;\n        w.setTimeout(function() {\n          makeRequests();\n        }, 0);\n      });\n    }\n  }, ripCSS = function() {\n    for (var i = 0; i < links.length; i++) {\n      var sheet = links[i], href = sheet.href, media = sheet.media, isCSS = sheet.rel && sheet.rel.toLowerCase() === \"stylesheet\";\n      if (!!href && isCSS && !parsedSheets[href]) {\n        if (sheet.styleSheet && sheet.styleSheet.rawCssText) {\n          translate(sheet.styleSheet.rawCssText, href, media);\n          parsedSheets[href] = true;\n        } else {\n          if (!/^([a-zA-Z:]*\\/\\/)/.test(href) && !base || href.replace(RegExp.$1, \"\").split(\"/\")[0] === w.location.host) {\n            if (href.substring(0, 2) === \"//\") {\n              href = w.location.protocol + href;\n            }\n            requestQueue.push({\n              href: href,\n              media: media\n            });\n          }\n        }\n      }\n    }\n    makeRequests();\n  };\n  ripCSS();\n  respond.update = ripCSS;\n  respond.getEmValue = getEmValue;\n  function callMedia() {\n    applyMedia(true);\n  }\n  if (w.addEventListener) {\n    w.addEventListener(\"resize\", callMedia, false);\n  } else if (w.attachEvent) {\n    w.attachEvent(\"onresize\", callMedia);\n  }\n})(this);"],"sourceRoot":"assets/scripts/"}